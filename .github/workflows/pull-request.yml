name: Pull Request

on:
  pull_request:
    branches: [ "main" ]
jobs:
  pull-request:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.6' # Specify your Go version
      - name: Install Dependencies
        run: go mod download
      - name: Build the Go Application
        run: go build -v ./...
      - name: Run Tests with Race Detection
        run: go test -race -v ./...
      - name: Run Tests with Coverage
        run: go test -cover -coverprofile=coverage.out ./...
      - name: Run Benchmarks with Regression Detection
        run: |
          # Make benchmark regression script executable
          chmod +x scripts/benchmark-regression.sh
          # Run benchmark regression detection
          ./scripts/benchmark-regression.sh run
      - name: Upload Benchmark Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: benchmark-results
          path: |
            benchmarks/current.json
            benchmarks/comparison.json
          retention-days: 30
      - name: Check Coverage Threshold
        run: |
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
          echo "Coverage: $COVERAGE%"
          THRESHOLD=75
          if [ $(echo "$COVERAGE" | cut -d. -f1) -lt $THRESHOLD ]; then
            echo "Coverage $COVERAGE% is below minimum threshold of $THRESHOLD%"
            exit 1
          fi
