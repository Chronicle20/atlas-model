name: golang-pipeline
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.0' # Specify your Go version
      - name: Install Dependencies
        run: go mod download
      - name: Build the Go Application
        run: go build -v ./...
      - name: Run Tests with Race Detection
        run: go test -race -v ./...
      - name: Run Tests with Coverage
        run: go test -cover -coverprofile=coverage.out ./...
      - name: Check Coverage Threshold
        run: |
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
          echo "Coverage: $COVERAGE%"
          THRESHOLD=75
          if [ $(echo "$COVERAGE" | cut -d. -f1) -lt $THRESHOLD ]; then
            echo "Coverage $COVERAGE% is below minimum threshold of $THRESHOLD%"
            exit 1
          fi
      - name: Upload Coverage Reports
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
